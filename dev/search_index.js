var documenterSearchIndex = {"docs":
[{"location":"#MajorizationExtrema.jl-1","page":"Home","title":"MajorizationExtrema.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Modules = [MajorizationExtrema]","category":"page"},{"location":"#MajorizationExtrema.:≺-Tuple{LinearAlgebra.Hermitian,LinearAlgebra.Hermitian}","page":"Home","title":"MajorizationExtrema.:≺","text":"≺(ρ::Hermitian, σ::Hermitian; tol=1e-8)\n\nReturns true if σ majorizes ρ and false otherwise. The keyword argument tol specifies a tolerance for the comparisons. Can be used in infix form, i.e. ρ ≺ σ.\n\n\n\n\n\n","category":"method"},{"location":"#MajorizationExtrema.:≺-Union{Tuple{T2}, Tuple{T1}, Tuple{AbstractArray{T1,1},AbstractArray{T2,1}}} where T2 where T1","page":"Home","title":"MajorizationExtrema.:≺","text":"≺(p::AbstractVector{T1}, q::AbstractVector{T2}; tol = (T1 <: AbstractFloat || T2 <: AbstractFloat) ? T2(1e-8) : zero(T2) ) where {T1, T2}\n\nReturns true if q majorizes p and false otherwise. The keyword argument tol specifies a tolerance for the comparisons. Can be used in infix form, i.e. p ≺ q.\n\n\n\n\n\n","category":"method"},{"location":"#MajorizationExtrema.TV-Tuple{AbstractArray{T,1} where T,AbstractArray{T,1} where T}","page":"Home","title":"MajorizationExtrema.TV","text":"TV(p, q)\n\nReturns the total variation distance between p and q (half the sum of the absolute value of the differences).\n\n\n\n\n\n","category":"method"},{"location":"#MajorizationExtrema.localbound-Tuple{Any,Any,Any}","page":"Home","title":"MajorizationExtrema.localbound","text":"localbound(f, p, ϵ)\n\nRequires f to be Schur convex or Schur concave (but does not check this condition). \n\nIf p is a vector, it is a assumed to be a probability vector, and localbound returns δ such that |f(p) - f(q)| <= δ for any probability vector q with TV(p, q) <= ϵ.\nIf p is a matrix, it is assumed to be a density matrix, and localbound returns δ such that |f(p) - f(q)| <= δ for any density matrix q with tracedist(p, q) <= ϵ.\n\n\n\n\n\n","category":"method"},{"location":"#MajorizationExtrema.majmax-Tuple{AbstractArray{T,1} where T,Any}","page":"Home","title":"MajorizationExtrema.majmax","text":"majmax(q::AbstractVector, ϵ)\n\nReturns the maximum in majorization order over the total variation ball (of probability vectors) of radius ϵ around a probability vector q.\n\n\n\n\n\n","category":"method"},{"location":"#MajorizationExtrema.majmax-Tuple{LinearAlgebra.Hermitian,Any}","page":"Home","title":"MajorizationExtrema.majmax","text":"majmax(ρ::Hermitian, ϵ)\n\nReturns the maximum in majorization order over the trace distance ball (of density matrices) of radius ϵ around a density matrix ρ.\n\n\n\n\n\n","category":"method"},{"location":"#MajorizationExtrema.majmin-Tuple{AbstractArray{T,1} where T,Any}","page":"Home","title":"MajorizationExtrema.majmin","text":"majmin(q::AbstractVector, ϵ)\n\nReturns the minimum in majorization order over the total variation ball (of probability vectors) of radius ϵ around a probability vector q.\n\n\n\n\n\n","category":"method"},{"location":"#MajorizationExtrema.majmin-Tuple{LinearAlgebra.Hermitian,Any}","page":"Home","title":"MajorizationExtrema.majmin","text":"majmin(ρ::Hermitian, ϵ)\n\nReturns the minimum in majorization order over the trace distance ball (of density matrices) of radius ϵ around a density matrix ρ.\n\n\n\n\n\n","category":"method"},{"location":"#MajorizationExtrema.randdm-Union{Tuple{T}, Tuple{Any,T}} where T<:Integer","page":"Home","title":"MajorizationExtrema.randdm","text":"randdm([rng], d::T) where {T <: Integer}\n\nGenerates a density matrix of dimension d at random.\n\n\n\n\n\n","category":"method"},{"location":"#MajorizationExtrema.randprobvec-Union{Tuple{T}, Tuple{AbstractRNG,T}} where T<:Integer","page":"Home","title":"MajorizationExtrema.randprobvec","text":"randprobvec([rng], d::T) where {T <: Integer}\n\nGenerates a random probability vector of length d using an algorithm by Smith and Tromble.\n\n\n\n\n\n","category":"method"},{"location":"#MajorizationExtrema.randprobvec-Union{Tuple{dT}, Tuple{T}, Tuple{AbstractRNG,dT,T}} where dT<:Integer where T<:Integer","page":"Home","title":"MajorizationExtrema.randprobvec","text":"randprobvec([rng], d::dT, N::T) where {T <: Integer, dT <: Integer}\n\nGenerates a random probability vector of length d whose entries are rational numbers with denominator at most N using an algorithm by Smith and Tromble.\n\n\n\n\n\n","category":"method"},{"location":"#MajorizationExtrema.randunitary-Union{Tuple{T}, Tuple{AbstractRNG,T}} where T<:Integer","page":"Home","title":"MajorizationExtrema.randunitary","text":"randunitary([rng], d::T) where {T <: Integer}\n\nGenerates a unitary matrix of dimension d at random according to the Haar measure, using an algorithm described by Maris Ozols in \"How to generate a random unitary matrix\".\n\n\n\n\n\n","category":"method"},{"location":"#MajorizationExtrema.tracedist-Tuple{AbstractArray{T,2} where T,AbstractArray{T,2} where T}","page":"Home","title":"MajorizationExtrema.tracedist","text":"tracedist(ρ::AbstractMatrix, σ::AbstractMatrix)\n\nComputes the trace distance between two matrices ρ and σ.\n\n\n\n\n\n","category":"method"},{"location":"#MajorizationExtrema.simplexpt-Tuple{Any}","page":"Home","title":"MajorizationExtrema.simplexpt","text":"simplexpt(unif)\n\nTakes a vector of length d-1 of numbers between 0 and 1 and converts it a point on the standard d-1 dimensional simplex.\n\n\n\n\n\n","category":"method"}]
}
